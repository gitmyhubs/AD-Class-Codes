====================================================================================
INTRODUCTION TO PHP
====================================================================================
PHP (Hypertext Preprocessor) is a widely-used open-source server-side scripting language
designed specifically for web development. It can be embedded into HTML and is known for
its ease of use, flexibility, and efficiency.

=> Features of PHP:
-------------------
->Simplicity: Easy to learn and use.
->Flexibility: Can be embedded in HTML, supports multiple databases like MySQL, PostgreSQL, 
                Oracle, etc.
->Open Source: Free to use and has a large community.
->Platform Independence: Runs on various platforms like Windows, Linux, MacOS.
->Speed: Generally faster than other scripting languages like ASP and JSP.
->Error Reporting: Supports reporting of simple and complex errors.
->Object-oriented programming (OOP): PHP supports OOP concepts like classes, objects,
 inheritance, and polymorphism, enabling better code organization and modularity.
 -> Built-in functions:

=> Usages of PHP:
-----------------
->Web Development: Creating dynamic web pages and applications.
->Server-Side Scripting: Executing code on the server to create dynamic content.
->Command Line Scripting: Running scripts without a server or browser.
->Database Interaction: Interacting with databases to fetch and manipulate data.
->Content Management Systems (CMS): Powering CMSs like WordPress, Joomla, and Drupal.
->E-commerce: Developing online stores and shopping carts.
->Data Encryption: Implementing encryption and security features.
->Image Processing: Handling image manipulation and generation.

=> How to Install PHP:
---------------------
-> Go to this link https://www.apachefriends.org/ // Download Xampp 
-> Choose Your Operating System for Download like Windows, MAC OS, Linux.
-> Download the software and install it.
-> After installing the XAMPP Server check type in URL 'localhost'

=> Where to save the project file:
---------------------------------
-> Go to installed drive name
-> Search for 'xampp' folder
-> Under 'xampp' folder go to 'htdocs' folder
-> Create project folder name under 'htdocs' folder.
-> The extension of file should be '.php' for example 'index.php'.

#How to Start Coding First in PHP:
<?php 
// your php code here...
?>

=> How to Run PHP file:
-----------------------
->Run the XAMPP server and start the Apache and MySQL.
->Now, open the web browser and type localhost http://localhost/yourphpfilename.php 
    on your browser window.

=> PHP Case Sensitivity:
------------------------
In PHP, keyword (e.g., echo, if, else, while), functions, user-defined functions, 
classes are not case-sensitive. However, all variable names are case-sensitive.

------------------------------------------------------------------------------
# PHP Echo:
----------------------------------------------------------------------------------
-> echo is a statement, which is used to display the output.
-> echo can be used with or without parentheses: echo(), and echo.
-> echo does not return any value.
-> We can pass multiple strings separated by a comma (,) in echo.
-> echo is faster than the print statement.

----------------------------------------------------------------
# PHP Print
-------------------------------------------------------------
Print statement can be used with or without parentheses: print and print().
Unlike echo, it always returns 1.

-> print is a statement, used as an alternative to echo at many times to display the output.
-> print can be used with or without parentheses.
-> print always returns an integer value, which is 1.
-> Using print, we cannot pass multiple arguments.
-> print is slower than the echo statement.

-----------------------------------------------
#Variable in PHP
----------------------------------------------------
In PHP, a variable is declared using a $ sign followed by the variable name. 
syntax: $variablename=value;  

Rules for declaring PHP variable:

-> A variable must start with a dollar ($) sign, followed by the variable name.
-> It can only contain alpha-numeric character and underscore (A-z, 0-9, _).
-> A variable name must start with a letter or underscore (_) character.
-> A PHP variable name cannot contain spaces.
-> One thing to be kept in mind that the variable name cannot start with a number
 or special symbols.
-> PHP variables are case-sensitive, so $name and $NAME both are treated 
as different variable.

=========================================================================
PHP Variable Scope
=========================================================================
PHP has two types of variable scopes:
1> Local variable
2> Global variable

1> Local Variable:
-----------------
A Variables defined inside a function or method are only accessible within that 
function or method are also called Local variable.

2> Global Variable:
------------------
The global variables are the variables that are declared outside the function. 
These variables can be accessed anywhere in the program. To access the global 
variable within a function, use the GLOBAL keyword before the variable.

=======================================================================
PHP $ and $$ Variables:
=======================================================================
The $var (single dollar) is a normal variable with the name var that stores 
any value like string, integer, float, etc.

The $$var (double dollar) is a reference variable that stores the value of 
the $variable inside it.

=======================================================================
PHP Constants:
=======================================================================
Constants are like variables, except that once they are defined they cannot
be changed or undefined.

1>Using define() function
2>Using const keyword

1>define():
----------
Use the define() function to create a constant. It defines constant at run time.
syntax: define(name, value, case-insensitive)  

2>PHP constant: const keyword:
-------------------------------
PHP introduced a keyword const to create a constant. The const keyword defines 
constants at compile time. It is a language construct, not a function. 
The constant defined using const keyword are case-sensitive.

=========================================================================
PHP Data Types
=========================================================================
PHP supports the following data types:

1>Scalar Types (predefined)
2>Compound Types (user-defined)
3>Special Types

1>Scalar Types (predefined): It holds only single value.
----------------------------
->string:
    A string is a sequence of characters, like "Hello AD CLass!".
    A string can be any text inside quotes. You can use single or double quotes.

->integer:
    An integer data type is a non-decimal number 
    An integer must have at least one digit
    An integer must not have a decimal point
    An integer can be either positive or negative
    Integers can be specified in: decimal (base 10), hexadecimal (base 16), octal 
    (base 8), or binary (base 2) notation.
    example: $num = 3242323;

->float:
    A float (floating point number) is a number with a decimal point or a number 
    in exponential form.
    for example: $num = 34.566;

->boolean:
    A Boolean represents two possible states: TRUE or FALSE.
    example:$x = true;
            
2>Compound Types (user-defined): It can hold multiple values.
-------------------------------
->array:
    An array stores multiple values in one single variable.
    example: $arr = ["name", "Email", "Password"];
 

->object:
    A class is a template for objects, and an object is an instance of a class.
    Objects are the instances of user-defined classes that can store both values and functions.

3>Special Types:
----------------
->resource
->NULL

==========================================================================
                        PHP Operators
=========================================================================
Operators are used to performing operations on some values. In other words, 
we can describe operators as something that takes some values, performs some 
operation on them, and gives a result. 
From example: “10 + 5 = 15”.

=> There are following types of Operators in PHP:
------------------------------------------------
1>Arithmetic operators
2>Assignment operators
3>Comparison operators
4>Increment/Decrement operators
5>Logical operators
6>String operators
7>Array operators
8>Conditional assignment operators

1>Arithmetic operators:
------------------------
+	Addition	
-	Subtraction		
*	Multiplication	
/	Division	
%	Modulus		
**	Exponentiation	

2> Assignment operators:
-----------------------
Assignment	Same as...	
x = y	    x = y		
x += y	    x = x + y	
x -= y	    x = x - y	
x *= y	    x = x * y		
x /= y	    x = x / y		
x %= y	    x = x % y


3> Comparison Operators:
-----------------------
Operator   Name
==	       Equal	         	
===	       Identical	
!=	       Not equal		
<>	       Not equal		
!==	       Not identical		
>	       Greater than		
<	       Less than	
>=	       Greater than or equal to		
<=	       Less than or equal to

4> Increment / Decrement Operator:
----------------------------------
Operator	Same as...	Description	
++$x	Pre-increment	Increments $x by one, then returns $x	
$x++	Post-increment	Returns $x, then increments $x by one	
--$x	Pre-decrement	Decrements $x by one, then returns $x	
$x--	Post-decrement	Returns $x, then decrements $x by one

5> Logical Operator:
-------------------
Operator	Name	Example	    Result	
and	        And	    $x and $y	True if both $x and $y are true	
or	        Or	    $x or $y	True if either $x or $y is true	
xor	        Xor	    $x xor $y	True if either $x or $y is true, but not both	
&&	        And	    $x && $y	True if both $x and $y are true	
||	        Or	    $x || $y	True if either $x or $y is true	
!	        Not	    !$x	        True if $x is not true

6> String Operators:
---------------------
Operator	Name	                    Example	        Result	
.	        Concatenation	            $str1 . $str2	Concatenation of $str1 and $str2	
.=	        Concatenation assignment	$str1 .= $str2	Appends $str2 to $str1

7> Array Operators:
-------------------
Operator    Name	        Example	    Explanation
+	        Union	        $a + $y	    Union of $a and $b
==	        Equality	    $a == $b	Return TRUE if $a and $b have same key/value pair
!=	        Inequality	    $a != $b	Return TRUE if $a is not equal to $b
===	        Identity	    $a === $b	Return TRUE if $a and $b have same key/value pair of same type in same order
!==	        Non-Identity    $a !== $b	Return TRUE if $a is not identical to $b
<>	        Inequality	    $a <> $b	Return TRUE if $a is not equal to $b

8> Conditional Assignment Operator:
----------------------------------
the conditional assignment operator is the ternary operator (?:), which provides a 
concise way to assign a value based on a condition. 
Syntax: condition ? value_if_true : value_if_false;

=======================================================================================
                            PHP Control statement
=======================================================================================
control statements are used to control the flow of execution in a program. 
They allow you to make decisions, repeat actions, and handle different conditions in your code.

1> if statement:
--------------
The if statement allows you to execute a block of code if a specified condition is true.

2>if-else Statement:
--------------------
The if-else statement provides an alternative block of code to execute if the condition is false.

3> if-elseif-else Statement:
---------------------------
The if-elseif-else statement allows you to check multiple conditions.

4> switch Statement:
--------------------
The switch statement is used to perform different actions based on different conditions.

5> for Loop:
-----------
The for loop is used to execute a block of code a specified number of times.
for(a = 5; a< 10; a++)

6> while Loop:
-------------
the while loop executes a block of code as long as a specified condition is true.

7>do-while Loop:
---------------
The do-while loop is similar to the while loop but guarantees that the block of code will 
execute at least once.

8> foreach Loop:
----------------
The foreach loop - Loops through a block of code for each element in an array or each
 property in an object.

 ===========================================================================
                        PHP Arrays
============================================================================
An array is a special variable that can hold many values under a single name.

There are 3 types of array in PHP.
1>Indexed Array
2>Associative Array
3>Multidimensional Array

1>Indexed Array:
---------------
Indexed arrays use numeric indices. These indices start from 0 by default.

2> Associative Array:
--------------------
Associative arrays are arrays that use named keys that you assign to them.

3> Multidimensional Array:
-------------------------
A multidimensional array is an array containing one or more arrays.

=> Array function:
-----------------
There are many built-in function in PHP like:
->count() - Count the total no of array values.
->rsort() - Sorts an indexed array in descending order
->shuffle() - Shuffles an array
->ksort() - Sort an associative array in ascending order, according to the key
->in_array() - The in_array() function searches an array for a specific value.
Note: If the search parameter is a string and the type parameter is set to TRUE, 
the search is case-sensitive.
Syntax: in_array(search, array, type)

->array_merge() - The array_merge() function merges one or more arrays into one array.

==============================================================================
                            PHP Function
==============================================================================
->A function is a block of code that performs a specific task.
->Functions can accept inputs (known as parameters), perform operations, and return a result. 
->PHP has over 1000 built-in functions that can be called directly, from within a script, 
    to perform a specific task.
    syntax: function functionname()
    {
        // your code here...
    }
    
    parameterized function syntax:
    function funParams(parameter)
    {
       // your code here...
    }

    ============================================================================
                            PHP Includes
===========================================================================
PHP allows you to include file so that a page content can be reused many times. 
It is very helpful to include files when you want to apply the same HTML or PHP 
code to multiple pages of a website.

There are two ways to include file in PHP:-

1>include: include only generates a warning, and continue the execution of the script.
Syntax: include 'filename.php';

2>require: require generates a fatal error, and stop the execution of the script.
Syntax: include_once 'filename.php';

Advantages:
    -> Code Reusability
    -> Easy Editable

==============================================================================
                        PHP Global Variables - Superglobals
==============================================================================
->Superglobals are built-in global arrays that are always accessible, regardless of scope.
->hey provide access to important data and configurations and facilitate interaction
    between different parts of your application.

The PHP superglobal variables are:

1>$GLOBALS
2>$_SERVER
3>$_REQUEST
4>$_POST
5>$_GET
6>$_FILES
7>$_ENV
8>$_COOKIE
9>$_SESSION

1>$GLOBALS - $GLOBALS is an array that contains all global variables.

2>$_REQUEST
----------- 
->Contains data from both $_GET and $_POST arrays, and $_COOKIE array. 
->$_SERVER is a PHP super global variable which holds information about 
    headers, paths, and script locations.

3> $_POST
---------  
$_POST contains an array of variables received via the HTTP POST method.
    There are two main ways to send variables via the HTTP Post method:
->HTML forms
->JavaScript HTTP requests

4> $_SERVER
-----------
$_SERVER is a PHP super global variable which holds information about headers,
 paths, and script locations.

5> $_GET
--------
$_GET contains an array of variables received via the HTTP GET method.

6> $_FILES
$_FILES is a PHP super global variable that holds information about file uploads.

It's primarily used when dealing with file uploads via forms with the 
enctype="multipart/form-data" attribute.

7> $_ENV
->$_ENV is a PHP super global variable that contains environment variables.
These variables are often set by the server or the environment in which 
PHP is running and can be used to retrieve configuration details, paths, 
or other environment-specific information.

->Access to $_ENV may vary based on server configuration and settings in php.ini.

8> $_COOKIE
->$_COOKIE is a PHP super global variable that contains all cookies sent to the 
server by the client.
->Cookies are key-value pairs sent from the client's browser and stored on the server, 
allowing data to persist across requests.
->This array is used to retrieve cookie values that were set in the user's browser.

9> $_SESSION
->$_SESSION is a PHP super global variable used to store session variables.
->Sessions allow data to be preserved across multiple page requests by the same 
user, typically stored on the server.
->Variables are stored in the session and can be accessed and modified throughout 
the user’s interaction with the web application.

=======================================================================
                        What is MySQL
=======================================================================
-> MySQL is a Database that can connect and manupulate with the database.
-> MySQL is a database system that runs on a server.
-> MySQL is very fast, reliable, and easy to use
-> MySQL is free to download and use

The data in a MySQL database are stored in tables. A table is a collection
 of related data, and it consists of columns and rows.

 => Connecting to database using MySQL:
 --------------------------------------
 We need four thing to connect for database:
 1> servername or hostname :  for example "localhost", "xyz.com" 
 2> username : by default user name is "root"
 3> passwpord : by default password is empty that is ""
 4> database name : for example  "employee"

 => How to create  Database name  and tables in MySQL: 
 -> First  Go to browser and type "localhost/phpmyadmin"
 ->A interface will open 
 ->goto database section and give a name for database like  "adclass"
 -> next goto table and create your table name like "users"
 ->define How many columns are need to be  inserted columns.

 =>Insert data into table:

 ->The SQL query must be quoted in PHP
->String values inside the SQL query must be quoted
->Numeric values must not be quoted
->The word NULL must not be quoted

 Syntax:
 INSERT INTO table_name (column1, column2, column3,...)
VALUES (value1, value2, value3,...)

Example:
$sql = "INSERT INTO users (firstname, lastname, email)
VALUES ('piyush', 'kumar', 'piyush@gmail.com')";

=> PHP MySQL Select Data:
The SELECT statement is used to select data from one or more tables:
syntax: SELECT column_name(s) FROM table_name

syntax for select all:
or we can use the * character to select ALL columns from a table:
SELECT * FROM table_name

=> PHP MySQL Use The WHERE Clause:
The WHERE clause is used to filter records.
The WHERE clause is used to extract only those records that fulfill a specified condition.
syntax: 
SELECT column_name(s) FROM table_name WHERE column_name operator value 

example:
$sql = "SELECT id, firstname, lastname FROM student WHERE lastname='sharma'";

=>PHP MySQL Delete Data:
The DELETE statement is used to delete records from a table:
syntax:
DELETE FROM table_name WHERE some_column = some_value

exa:
$sql = "DELETE FROM users WHERE id=3";

=>PHP MySQL Update Data:
The UPDATE statement is used to update existing records in a table
syntx: UPDATE table_name SET column1=value, column2=value2,... WHERE some_column=some_value 

example:
$sql = "UPDATE users SET lastname='sharma' WHERE id=2";